// Code generated by "stringer -type=Event -linecomment -output gen_event_stringer.go"; DO NOT EDIT.

package govim

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EventBufNewFile-0]
	_ = x[EventBufReadPre-1]
	_ = x[EventBufRead-2]
	_ = x[EventBufReadPost-3]
	_ = x[EventBufReadCmd-4]
	_ = x[EventFileReadPre-5]
	_ = x[EventFileReadPost-6]
	_ = x[EventFileReadCmd-7]
	_ = x[EventFilterReadPre-8]
	_ = x[EventFilterReadPost-9]
	_ = x[EventStdinReadPre-10]
	_ = x[EventStdinReadPost-11]
	_ = x[EventBufWrite-12]
	_ = x[EventBufWritePre-13]
	_ = x[EventBufWritePost-14]
	_ = x[EventBufWriteCmd-15]
	_ = x[EventFileWritePre-16]
	_ = x[EventFileWritePost-17]
	_ = x[EventFileWriteCmd-18]
	_ = x[EventFileAppendPre-19]
	_ = x[EventFileAppendPost-20]
	_ = x[EventFileAppendCmd-21]
	_ = x[EventFilterWritePre-22]
	_ = x[EventFilterWritePost-23]
	_ = x[EventBufAdd-24]
	_ = x[EventBufCreate-25]
	_ = x[EventBufDelete-26]
	_ = x[EventBufWipeout-27]
	_ = x[EventTerminalOpen-28]
	_ = x[EventBufFilePre-29]
	_ = x[EventBufFilePost-30]
	_ = x[EventBufEnter-31]
	_ = x[EventBufLeave-32]
	_ = x[EventBufWinEnter-33]
	_ = x[EventBufWinLeave-34]
	_ = x[EventBufUnload-35]
	_ = x[EventBufHidden-36]
	_ = x[EventBufNew-37]
	_ = x[EventSwapExists-38]
	_ = x[EventFileType-39]
	_ = x[EventSyntax-40]
	_ = x[EventEncodingChanged-41]
	_ = x[EventTermChanged-42]
	_ = x[EventOptionSet-43]
	_ = x[EventVimEnter-44]
	_ = x[EventGUIEnter-45]
	_ = x[EventGUIFailed-46]
	_ = x[EventTermResponse-47]
	_ = x[EventQuitPre-48]
	_ = x[EventExitPre-49]
	_ = x[EventVimLeavePre-50]
	_ = x[EventVimLeave-51]
	_ = x[EventFileChangedShell-52]
	_ = x[EventFileChangedShellPost-53]
	_ = x[EventFileChangedRO-54]
	_ = x[EventDiffUpdated-55]
	_ = x[EventDirChanged-56]
	_ = x[EventShellCmdPost-57]
	_ = x[EventShellFilterPost-58]
	_ = x[EventCmdUndefined-59]
	_ = x[EventFuncUndefined-60]
	_ = x[EventSpellFileMissing-61]
	_ = x[EventSourcePre-62]
	_ = x[EventSourcePost-63]
	_ = x[EventSourceCmd-64]
	_ = x[EventVimResized-65]
	_ = x[EventFocusGained-66]
	_ = x[EventFocusLost-67]
	_ = x[EventCursorHold-68]
	_ = x[EventCursorHoldI-69]
	_ = x[EventCursorMoved-70]
	_ = x[EventCursorMovedI-71]
	_ = x[EventWinNew-72]
	_ = x[EventTabNew-73]
	_ = x[EventTabClosed-74]
	_ = x[EventWinEnter-75]
	_ = x[EventWinLeave-76]
	_ = x[EventTabEnter-77]
	_ = x[EventTabLeave-78]
	_ = x[EventCmdwinEnter-79]
	_ = x[EventCmdwinLeave-80]
	_ = x[EventCmdlineChanged-81]
	_ = x[EventCmdlineEnter-82]
	_ = x[EventCmdlineLeave-83]
	_ = x[EventInsertEnter-84]
	_ = x[EventInsertChange-85]
	_ = x[EventInsertLeave-86]
	_ = x[EventInsertCharPre-87]
	_ = x[EventTextChanged-88]
	_ = x[EventTextChangedI-89]
	_ = x[EventTextChangedP-90]
	_ = x[EventTextYankPost-91]
	_ = x[EventColorSchemePre-92]
	_ = x[EventColorScheme-93]
	_ = x[EventRemoteReply-94]
	_ = x[EventQuickFixCmdPre-95]
	_ = x[EventQuickFixCmdPost-96]
	_ = x[EventSessionLoadPost-97]
	_ = x[EventMenuPopup-98]
	_ = x[EventCompleteDone-99]
}

const _Event_name = "BufNewFileBufReadPreBufReadBufReadPostBufReadCmdFileReadPreFileReadPostFileReadCmdFilterReadPreFilterReadPostStdinReadPreStdinReadPostBufWriteBufWritePreBufWritePostBufWriteCmdFileWritePreFileWritePostFileWriteCmdFileAppendPreFileAppendPostFileAppendCmdFilterWritePreFilterWritePostBufAddBufCreateBufDeleteBufWipeoutTerminalOpenBufFilePreBufFilePostBufEnterBufLeaveBufWinEnterBufWinLeaveBufUnloadBufHiddenBufNewSwapExistsFileTypeSyntaxEncodingChangedTermChangedOptionSetVimEnterGUIEnterGUIFailedTermResponseQuitPreExitPreVimLeavePreVimLeaveFileChangedShellFileChangedShellPostFileChangedRODiffUpdatedDirChangedShellCmdPostShellFilterPostCmdUndefinedFuncUndefinedSpellFileMissingSourcePreSourcePostSourceCmdVimResizedFocusGainedFocusLostCursorHoldCursorHoldICursorMovedCursorMovedIWinNewTabNewTabClosedWinEnterWinLeaveTabEnterTabLeaveCmdwinEnterCmdwinLeaveCmdlineChangedCmdlineEnterCmdlineLeaveInsertEnterInsertChangeInsertLeaveInsertCharPreTextChangedTextChangedITextChangedPTextYankPostColorSchemePreColorSchemeRemoteReplyQuickFixCmdPreQuickFixCmdPostSessionLoadPostMenuPopupCompleteDone"

var _Event_index = [...]uint16{0, 10, 20, 27, 38, 48, 59, 71, 82, 95, 109, 121, 134, 142, 153, 165, 176, 188, 201, 213, 226, 240, 253, 267, 282, 288, 297, 306, 316, 328, 338, 349, 357, 365, 376, 387, 396, 405, 411, 421, 429, 435, 450, 461, 470, 478, 486, 495, 507, 514, 521, 532, 540, 556, 576, 589, 600, 610, 622, 637, 649, 662, 678, 687, 697, 706, 716, 727, 736, 746, 757, 768, 780, 786, 792, 801, 809, 817, 825, 833, 844, 855, 869, 881, 893, 904, 916, 927, 940, 951, 963, 975, 987, 1001, 1012, 1023, 1037, 1052, 1067, 1076, 1088}

func (i Event) String() string {
	if i >= Event(len(_Event_index)-1) {
		return "Event(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Event_name[_Event_index[i]:_Event_index[i+1]]
}
