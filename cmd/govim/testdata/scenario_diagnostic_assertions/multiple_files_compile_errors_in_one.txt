# Verify that we receive initial diagnostics for files that have compile errors
# but not for those that don't before opening the files.

[v8.2.3019] vimexprwait errors.v8.2.3019.golden GOVIMTest_getqflist()
[!v8.2.3019] vimexprwait errors.golden GOVIMTest_getqflist()

errlogmatch -count=0 -start 'PublishDiagnostics callback: &protocol.PublishDiagnosticsParams{\n\S+:\s+URI:\s+"file://'$WORK/other.go

vim ex 'e main.go'

vim ex 'e other.go'

# Opening a file will result in a diagnostic report, see govim/govim#1163 (and CL 420539).
errlogmatch -count=1 -start 'PublishDiagnostics callback: &protocol.PublishDiagnosticsParams{\n\S+:\s+URI:\s+"file://'$WORK/other.go

[v8.2.3019] vimexprwait errors.v8.2.3019.golden GOVIMTest_getqflist()
[!v8.2.3019] vimexprwait errors.golden GOVIMTest_getqflist()

# Assert that we have received no error (Type: 1) or warning (Type: 2) log messages
# Disabled pending resolution to https://github.com/golang/go/issues/34103
# errlogmatch -start -count=0 'LogMessage callback: &protocol\.LogMessageParams\{Type:(1|2), Message:".*'

-- go.mod --
module mod.com

go 1.12
-- main.go --
package main

blah
-- other.go --
package main
-- errors.golden --
[
  {
    "bufname": "main.go",
    "col": 1,
    "lnum": 3,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "expected declaration, found blah",
    "type": "",
    "valid": 1,
    "vcol": 0
  }
]
-- errors.v8.2.3019.golden --
[
  {
    "bufname": "main.go",
    "col": 1,
    "end_col": 0,
    "end_lnum": 0,
    "lnum": 3,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "expected declaration, found blah",
    "type": "",
    "valid": 1,
    "vcol": 0
  }
]
