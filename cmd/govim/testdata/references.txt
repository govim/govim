# Test that the quickfix window gets populated with locations for the
# GOVIMReferences command

# Ensure quickfix diagnostics are turned on
vim call 'govim#config#Set' '["QuickfixAutoDiagnosticsDisable", 0]'

# Initial location population
vim ex 'e main.go'
errlogmatch -wait 60s 'PublishDiagnostics callback: &protocol.PublishDiagnosticsParams{\n\S+:\s+URI:\s+"file://'$WORK/main.go
vim ex 'call cursor(15,24)'
vim ex 'GOVIMReferences'
vim ex 'copen'
vim ex 'w locations'
cmp locations locations.golden

# Introduce an error - locations should remain
vim ex 'call win_gotoid(win_findbuf(bufnr(\"main.go\"))[0])'
vim expr 'bufname(\"\")'
vim ex 'call cursor(15,1)'
vim ex 'call feedkeys(\"ofmt.Printf(\\\"%v\\\")\\<ESC>\", \"xt\")'
[vim] [!vim:v8.1.1711] vim ex 'doautocmd TextChanged'
[gvim] [!gvim:v8.1.1711] vim ex 'doautocmd TextChanged'
errlogmatch -wait 60s 'PublishDiagnostics callback: &protocol.PublishDiagnosticsParams{\n\S+:\s+URI:\s+"file://'$WORK/main.go
vim ex 'copen'
vim ex 'w locations'
cmp locations locations.golden

# Now use quickfix for errors
vim ex 'call win_gotoid(win_findbuf(bufnr(\"main.go\"))[0])'
vim ex 'GOVIMQuickfixDiagnostics'
vim ex 'copen'
vim ex 'w errors'
cmp errors errors.golden

# Check for errors
# Disabled pending resolution to https://github.com/golang/go/issues/34103
# errlogmatch -count=0 'LogMessage callback: &protocol\.LogMessageParams\{Type:(1|2), Message:".*'

-- go.mod --
module mod.com

-- main.go --
package main

import "fmt"

var v int

func main() {
	v = 5
	v += 1
	v += 1
	v += v + v + v + v
	v += 1
	v += 1
	v += 1
	fmt.Printf("v: %v\n", v)
}
-- a.go --
package main

// deliberately named a.go because this would lexically appear before main.go

func DoIt() {
	v += 5
	v += 6
}
-- locations.golden --
main.go|5 col 5| var v int
main.go|8 col 2| v = 5
main.go|9 col 2| v += 1
main.go|10 col 2| v += 1
main.go|11 col 2| v += v + v + v + v
main.go|11 col 7| v += v + v + v + v
main.go|11 col 11| v += v + v + v + v
main.go|11 col 15| v += v + v + v + v
main.go|11 col 19| v += v + v + v + v
main.go|12 col 2| v += 1
main.go|13 col 2| v += 1
main.go|14 col 2| v += 1
main.go|15 col 24| fmt.Printf("v: %v\n", v)
a.go|6 col 2| v += 5
a.go|7 col 2| v += 6
-- errors.golden --
main.go|16 col 2| Printf format %v reads arg #1, but call has 0 args
