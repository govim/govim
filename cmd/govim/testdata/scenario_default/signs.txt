# Test that signs are placed/removed as quickfix entries are updated. There are four entries from the start:
#   main.go|6 col 36| undeclared name: i
#   main.go|6 col 39| undeclared name: v
#   main.go|9 col 19| missing return
#   main.go|10 col 19| missing return
#
# TODO: Add tests for diagnostics with info & hint severity. Currently there are no such diagnostics in gopls.
# TODO: Add tests for two diagnostics with different severities on the same line. Currently not supported by gopls.

vim ex 'e main.go'
errlogmatch 'sendJSONMsg: .*\"call\",\"s:batchCall\",.*\"sign_placelist\"'

# Assert that the different signs are defined
vim -indent expr 'sign_getdefined()'
! stderr .+
cmp stdout defined.golden


# There must be only one sign per line (per prio)
vim -indent expr 'sign_getplaced(\"main.go\", {\"group\": \"*\"})'
! stderr .+
cmp stdout placed_openfile1.golden
# Disabled pending resolution to https://github.com/golang/go/issues/34103
# errlogmatch -count=0 'LogMessage callback: &protocol\.LogMessageParams\{Type:(1|2), Message:".*'


# Removing one of the two quickfix entires on one line shouldn't remove the sign
vim ex 'call cursor(6,36)'
vim ex 'call feedkeys(\"3x\", \"x\")' # Remove "i, " from Printf-line
errlogmatch 'sendJSONMsg: \[0,\[\d+,"call","s:batchCall",\[\["call","s:mustBeZero","sign_unplace","govim"\],\["call","s:mustNothing","sign_placelist",\[\{"buffer":1,"group":"govim"'
vim -indent expr 'sign_getplaced(\"main.go\", {\"group\": \"*\"})'
! stderr .+
cmp stdout placed_openfile2.golden
# Disabled pending resolution to https://github.com/golang/go/issues/34103
# errlogmatch -count=0 'LogMessage callback: &protocol\.LogMessageParams\{Type:(1|2), Message:".*'


# Removing lines should also remove the signs
vim ex 'call cursor(9,1)'
vim ex 'call feedkeys(\"2dd\", \"x\")' # Remove line 9 & 10
errlogmatch 'sendJSONMsg: \[0,\[\d+,"call","s:batchCall",\[\["call","s:mustBeZero","sign_unplace","govim"\],\["call","s:mustNothing","sign_placelist",\[\{"buffer":1,"group":"govim"'
vim -indent expr 'sign_getplaced(\"main.go\", {\"group\": \"*\"})'
! stderr .+
cmp stdout placed_onesign.golden
# Disabled pending resolution to https://github.com/golang/go/issues/34103
# errlogmatch -count=0 'LogMessage callback: &protocol\.LogMessageParams\{Type:(1|2), Message:".*'


# Fixing the last quickfix entry should remove the last sign
vim call append '[5, "\tvar v string"]'
errlogmatch 'sendJSONMsg: \[0,\[\d+,"call","s:batchCall",\[\["call","s:mustBeZero","sign_unplace","govim"\]\]\]\]'
vim -indent expr 'sign_getplaced(\"main.go\", {\"group\": \"*\"})'
! stderr .+
cmp stdout placed_nosign.golden
# Disabled pending resolution to https://github.com/golang/go/issues/34103
# errlogmatch -count=0 'LogMessage callback: &protocol\.LogMessageParams\{Type:(1|2), Message:".*'


# Two warnings on one line should place two warnings
vim call append '[5, "\tvar x, y int\n\tx, y = x, y"]'
errlogmatch 'sendJSONMsg: \[0,\[\d+,"call","s:batchCall",\[\["call","s:mustBeZero","sign_unplace","govim"\],\["call","s:mustNothing","sign_placelist",\[\{"buffer":1,"group":"govim"'
vim -indent expr 'sign_getplaced(\"main.go\", {\"group\": \"*\"})'
! stderr .+
cmp stdout placed_twowarnings.golden
# Disabled pending resolution to https://github.com/golang/go/issues/34103
# errlogmatch -count=0 'LogMessage callback: &protocol\.LogMessageParams\{Type:(1|2), Message:".*'

-- go.mod --
module mod.com

-- main.go --
package main

import "fmt"

func main() {
	fmt.Printf("This is a test %v\n", i, v)
}

func f1() string {}
func f2() string {}

-- defined.golden --
[
  {
    "name": "GOVIMSignErr",
    "text": "\u003e\u003e",
    "texthl": "GOVIMSignErr"
  },
  {
    "name": "GOVIMSignWarn",
    "text": "\u003e\u003e",
    "texthl": "GOVIMSignWarn"
  },
  {
    "name": "GOVIMSignInfo",
    "text": "\u003e\u003e",
    "texthl": "GOVIMSignInfo"
  },
  {
    "name": "GOVIMSignHint",
    "text": "\u003e\u003e",
    "texthl": "GOVIMSignHint"
  }
]
-- placed_openfile1.golden --
[
  {
    "bufnr": 1,
    "signs": [
      {
        "group": "govim",
        "id": 2,
        "lnum": 6,
        "name": "GOVIMSignErr",
        "priority": 14
      },
      {
        "group": "govim",
        "id": 1,
        "lnum": 6,
        "name": "GOVIMSignErr",
        "priority": 14
      },
      {
        "group": "govim",
        "id": 3,
        "lnum": 9,
        "name": "GOVIMSignErr",
        "priority": 14
      },
      {
        "group": "govim",
        "id": 4,
        "lnum": 10,
        "name": "GOVIMSignErr",
        "priority": 14
      }
    ]
  }
]
-- placed_openfile2.golden --
[
  {
    "bufnr": 1,
    "signs": [
      {
        "group": "govim",
        "id": 1,
        "lnum": 6,
        "name": "GOVIMSignErr",
        "priority": 14
      },
      {
        "group": "govim",
        "id": 2,
        "lnum": 9,
        "name": "GOVIMSignErr",
        "priority": 14
      },
      {
        "group": "govim",
        "id": 3,
        "lnum": 10,
        "name": "GOVIMSignErr",
        "priority": 14
      }
    ]
  }
]
-- placed_onesign.golden --
[
  {
    "bufnr": 1,
    "signs": [
      {
        "group": "govim",
        "id": 1,
        "lnum": 6,
        "name": "GOVIMSignErr",
        "priority": 14
      }
    ]
  }
]
-- placed_nosign.golden --
[
  {
    "bufnr": 1,
    "signs": []
  }
]
-- placed_twowarnings.golden --
[
  {
    "bufnr": 1,
    "signs": [
      {
        "group": "govim",
        "id": 2,
        "lnum": 7,
        "name": "GOVIMSignWarn",
        "priority": 12
      },
      {
        "group": "govim",
        "id": 1,
        "lnum": 7,
        "name": "GOVIMSignWarn",
        "priority": 12
      }
    ]
  }
]
