# Test that GOVIMStringFn works

# No range
vim ex 'e main.go'
vim ex 'call cursor(7,1) | GOVIMStringFn crypto/sha256.Sum256 encoding/hex.EncodeToString'
vim ex 'w'
cmp main.go main.go.golden1

# With a visual selection

# Skip for now because for some reason we can't get the commands
# to play ball, even though doing this by hand works
skip

vim ex 'call cursor(6,15)'
#vim ex ':execute \"normal ve\" | ''<,''>GOVIMStringFn crypto/sha256.Sum256 encoding/hex.EncodeToString'
#vim ex 'call cursor(6,15) | execute \"normal ve\" | :''<,''>GOVIMStringFn crypto/sha256.Sum256 encoding/hex.EncodeToString'
vim ex 'call cursor(6,15)'
vim ex 'execute \"normal ve\"'
vim ex '''<,''>GOVIMStringFn crypto/sha256.Sum256 encoding/hex.EncodeToString'
#vim ex 'call feedkeys(\"ve:GOVIMStringFn crypto/sha256.Sum256 encoding/hex.EncodeToString\", \"xt\")'
vim ex 'w'
cmp main.go main.go.golden

-- go.mod --
module mod

go 1.12
-- main.go --
package main

import "fmt"

func main() {
	fmt.Println(`
test
`)
	fmt.Println("test")
}
-- main.go.golden1 --
package main

import "fmt"

func main() {
	fmt.Println(`
9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08
`)
	fmt.Println("test")
}
