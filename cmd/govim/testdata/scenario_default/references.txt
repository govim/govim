# Test that the quickfix window gets populated with locations for the
# GOVIMReferences command

[short] skip 'Skip short because we sleep for GOVIM_ERRLOGMATCH_WAIT to ensure we don''t have any errors'

# Initial location population
vim ex 'e main.go'
vim ex 'call cursor(15,24)'
vim ex 'GOVIMReferences' # note this moves the cursor to the quickfix window
vim ex 'call win_gotoid(win_findbuf(bufnr(\"main.go\"))[0])'
vimexprwait locations.golden getqflist()

# Introduce an error - locations should remain
vim ex 'call cursor(15,1)'
vim ex 'call feedkeys(\"ofmt.Printf(\\\"%v\\\")\\<ESC>\", \"xt\")'
sleep $GOVIM_ERRLOGMATCH_WAIT
vimexprwait locations.golden getqflist()

# Now use quickfix for errors
vim ex 'GOVIMQuickfixDiagnostics'
vimexprwait errors.golden getqflist()

# Disabled pending resolution to https://github.com/golang/go/issues/34103
# errlogmatch -count=0 'LogMessage callback: &protocol\.LogMessageParams\{Type:(1|2), Message:".*'

-- go.mod --
module mod.com

go 1.12
-- main.go --
package main

import "fmt"

var v int

func main() {
	v = 5
	v += 1
	v += 1
	v += v + v + v + v
	v += 1
	v += 1
	v += 1
	fmt.Printf("v: %v\n", v)
}
-- a.go --
package main

// deliberately named a.go because this would lexically appear before main.go

func DoIt() {
	v += 5
	v += 6
}
-- locations.golden --
[
  {
    "bufnr": 1,
    "col": 5,
    "lnum": 5,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "var v int",
    "type": "",
    "valid": 1,
    "vcol": 0
  },
  {
    "bufnr": 1,
    "col": 2,
    "lnum": 8,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "\tv = 5",
    "type": "",
    "valid": 1,
    "vcol": 0
  },
  {
    "bufnr": 1,
    "col": 2,
    "lnum": 9,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "\tv += 1",
    "type": "",
    "valid": 1,
    "vcol": 0
  },
  {
    "bufnr": 1,
    "col": 2,
    "lnum": 10,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "\tv += 1",
    "type": "",
    "valid": 1,
    "vcol": 0
  },
  {
    "bufnr": 1,
    "col": 2,
    "lnum": 11,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "\tv += v + v + v + v",
    "type": "",
    "valid": 1,
    "vcol": 0
  },
  {
    "bufnr": 1,
    "col": 7,
    "lnum": 11,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "\tv += v + v + v + v",
    "type": "",
    "valid": 1,
    "vcol": 0
  },
  {
    "bufnr": 1,
    "col": 11,
    "lnum": 11,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "\tv += v + v + v + v",
    "type": "",
    "valid": 1,
    "vcol": 0
  },
  {
    "bufnr": 1,
    "col": 15,
    "lnum": 11,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "\tv += v + v + v + v",
    "type": "",
    "valid": 1,
    "vcol": 0
  },
  {
    "bufnr": 1,
    "col": 19,
    "lnum": 11,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "\tv += v + v + v + v",
    "type": "",
    "valid": 1,
    "vcol": 0
  },
  {
    "bufnr": 1,
    "col": 2,
    "lnum": 12,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "\tv += 1",
    "type": "",
    "valid": 1,
    "vcol": 0
  },
  {
    "bufnr": 1,
    "col": 2,
    "lnum": 13,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "\tv += 1",
    "type": "",
    "valid": 1,
    "vcol": 0
  },
  {
    "bufnr": 1,
    "col": 2,
    "lnum": 14,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "\tv += 1",
    "type": "",
    "valid": 1,
    "vcol": 0
  },
  {
    "bufnr": 1,
    "col": 24,
    "lnum": 15,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "\tfmt.Printf(\"v: %v\\n\", v)",
    "type": "",
    "valid": 1,
    "vcol": 0
  },
  {
    "bufnr": 2,
    "col": 2,
    "lnum": 6,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "\tv += 5",
    "type": "",
    "valid": 1,
    "vcol": 0
  },
  {
    "bufnr": 2,
    "col": 2,
    "lnum": 7,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "\tv += 6",
    "type": "",
    "valid": 1,
    "vcol": 0
  }
]
-- errors.golden --
[
  {
    "bufnr": 1,
    "col": 2,
    "lnum": 16,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "Printf format %v reads arg #1, but call has 0 args",
    "type": "",
    "valid": 1,
    "vcol": 0
  }
]
