# Test that signs are placed when opening a file that already has diagnostics.

vim ex 'e main.go'
errlogmatch -peek 'PublishDiagnostics callback: &protocol.PublishDiagnosticsParams{\n\S+:\s+URI:\s+"file://'$WORK/main.go
errlogmatch 'PublishDiagnostics callback: &protocol.PublishDiagnosticsParams{\n\S+:\s+URI:\s+"file://'$WORK/other.go
vim ex 'e other.go'
errlogmatch 'PublishDiagnostics callback: &protocol.PublishDiagnosticsParams{\n\S+:\s+URI:\s+"file://'$WORK/other.go
errlogmatch 'sendJSONMsg: \[0,\[\d+,"call","s:batchCall",\[\["call","s:mustBeZero","sign_unplace","govim"\],\["call","s:mustNothing","sign_placelist",\[.*\{"buffer":3,"group":"govim"'
vim -indent expr 'sign_getplaced(\"other.go\", {\"group\": \"*\"})'
! stderr .+
cmp stdout placed.golden

# Disabled pending resolution to https://github.com/golang/go/issues/34103
# errlogmatch -count=0 'LogMessage callback: &protocol\.LogMessageParams\{Type:(1|2), Message:".*'

-- go.mod --
module mod.com

go 1.12
-- main.go --
package main

func main() {
    var z int
    z = z
}
-- other.go --
package main

import "fmt"

func foo() {
    fmt.Printf("%v")
}

-- placed.golden --
[
  {
    "bufnr": 3,
    "signs": [
      {
        "group": "govim",
        "id": 1,
        "lnum": 6,
        "name": "GOVIMSignWarn",
        "priority": 12
      }
    ]
  }
]
