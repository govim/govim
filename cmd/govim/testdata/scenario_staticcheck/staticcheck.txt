# Verify that staticcheck is enabled by default and works

# Note: errors.golden effectively contains a duplicate diagnostic below. This is
# being tracked in https://github.com/golang/go/issues/34494 but we "allow" it
# for now in this test to give exposure to the staticcheck work

vim ex 'e main.go'
vimexprwait errors.golden getqflist()

# Disabled pending resolution to https://github.com/golang/go/issues/34103
# errlogmatch -count=0 'LogMessage callback: &protocol\.LogMessageParams\{Type:(1|2), Message:".*'

-- go.mod --
module mod.com

go 1.12
-- main.go --
package main

import "fmt"

func main() {
	var s string
	s = fmt.Sprintf("%s", s)
	fmt.Println(s)
	fmt.Printf("%v")
}
-- errors.golden --
[
  {
    "bufnr": 1,
    "col": 6,
    "lnum": 7,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "the argument is already a string, there's no need to use fmt.Sprintf",
    "type": "",
    "valid": 1,
    "vcol": 0
  },
  {
    "bufnr": 1,
    "col": 2,
    "lnum": 9,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "Printf format %v reads arg #1, but call has 0 args",
    "type": "",
    "valid": 1,
    "vcol": 0
  },
  {
    "bufnr": 1,
    "col": 12,
    "lnum": 9,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "Printf format %v reads arg #1, but call has only 0 args",
    "type": "",
    "valid": 1,
    "vcol": 0
  }
]
