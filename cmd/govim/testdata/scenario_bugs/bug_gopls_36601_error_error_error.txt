# A test that ensures we have a fix for golang.org/issue/36601. Specifically
# that transitions between various states leave diagnostics in the expect state
# when we revert back to the original file contents.
#
# This test moves from error -> error -> error, i.e.  we are making a change
# that should not alter the diagnostics, then undoing that change.

[short] skip 'Skip short because we sleep for GOVIM_ERRLOGMATCH_WAIT to ensure we don''t have any errors'

# Expect the initial state
vim ex 'e main.go'
vimexprwait errors.golden GOVIMTest_getqflist()

# Make a change that shouldn't alter the diagnostics
vim call append '[4,"\t"]'
sleep $GOVIM_ERRLOGMATCH_WAIT
vimexprwait errors.golden GOVIMTest_getqflist()

# Undo that change and ensure we still have the diagnostics
vim ex 5delete
sleep $GOVIM_ERRLOGMATCH_WAIT
vimexprwait errors.golden GOVIMTest_getqflist()

-- go.mod --
module mod.com

go 1.12
-- main.go --
package main

func main() {
	x := 123
}
-- errors.golden --
[
  {
    "bufname": "main.go",
    "col": 2,
    "lnum": 4,
    "module": "",
    "nr": 0,
    "pattern": "",
    "text": "x declared but not used",
    "type": "",
    "valid": 1,
    "vcol": 0
  }
]
